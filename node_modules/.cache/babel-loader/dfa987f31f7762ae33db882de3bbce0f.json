{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/chris/code/typegraphql-series/typescript-nextjs-graphql/pages/register.tsx\";\nimport React from 'react';\nimport { Formik, Field } from 'formik';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/files/InputField';\nimport { RegisterComponent } from '../generated/apolloComponents';\n\nvar Register = function Register() {\n  return React.createElement(Layout, {\n    title: \"Register Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(RegisterComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, function (register) {\n    return React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        firstName: '',\n        lastName: '',\n        password: ''\n      },\n      onSubmit:\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          var result;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log('data:', data);\n                  _context.next = 3;\n                  return register({\n                    variables: {\n                      data: data\n                    }\n                  });\n\n                case 3:\n                  result = _context.sent;\n                  console.log('result:', result);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, function (_ref2) {\n      var values = _ref2.values,\n          handleSubmit = _ref2.handleSubmit;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"firstName\",\n        placeholder: \"first name\",\n        component: InputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"lastName\",\n        placeholder: \"last name\",\n        component: InputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"email\",\n        component: InputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"password\",\n        component: InputField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Submit\"));\n    });\n  }));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/chris/code/typegraphql-series/typescript-nextjs-graphql/pages/register.tsx"],"names":["React","Formik","Field","Layout","InputField","RegisterComponent","Register","register","email","firstName","lastName","password","data","console","log","variables","result","values","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,QAAQ,EAAI;AACX,WACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE,EADM;AAEbC,QAAAA,SAAS,EAAE,EAFE;AAGbC,QAAAA,QAAQ,EAAE,EAHG;AAIbC,QAAAA,QAAQ,EAAE;AAJG,OADjB;AAOE,MAAA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAE,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AADQ;AAAA,yBAEaL,QAAQ,CAAC;AAAEQ,oBAAAA,SAAS,EAAE;AAAEH,sBAAAA,IAAI,EAAJA;AAAF;AAAb,mBAAD,CAFrB;;AAAA;AAEFI,kBAAAA,MAFE;AAGRH,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,MAAvB;;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaG;AAAA,UAAGC,MAAH,SAAGA,MAAH;AAAA,UAAWC,YAAX,SAAWA,YAAX;AAAA,aACC;AAAM,QAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,SAAS,EAAEd,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,SAAS,EAAEA,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,SAAS,EAAEA,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAiBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,SAAS,EAAEA,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAwBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBF,CADD;AAAA,KAbH,CADF;AA4CD,GA9CH,CADF,CADF;AAoDD,CArDD;;AAuDA,eAAeE,QAAf","sourcesContent":["import React from 'react';\nimport { Formik, Field } from 'formik';\nimport Layout from '../components/Layout';\nimport { InputField } from '../components/files/InputField';\nimport { RegisterComponent } from '../generated/apolloComponents';\n\nconst Register = () => {\n  return (\n    <Layout title=\"Register Page\">\n      <RegisterComponent>\n        {register => {\n          return (\n            <Formik\n              initialValues={{\n                email: '',\n                firstName: '',\n                lastName: '',\n                password: '',\n              }}\n              onSubmit={async data => {\n                console.log('data:', data);\n                const result = await register({ variables: { data } });\n                console.log('result:', result);\n              }}\n            >\n              {({ values, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <Field\n                    name=\"firstName\"\n                    placeholder=\"first name\"\n                    component={InputField}\n                  />\n                  <Field\n                    name=\"lastName\"\n                    placeholder=\"last name\"\n                    component={InputField}\n                  />\n                  <Field\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"email\"\n                    component={InputField}\n                  />\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    component={InputField}\n                  />\n\n                  <button type=\"submit\">Submit</button>\n                </form>\n              )}\n            </Formik>\n          );\n        }}\n      </RegisterComponent>\n    </Layout>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}