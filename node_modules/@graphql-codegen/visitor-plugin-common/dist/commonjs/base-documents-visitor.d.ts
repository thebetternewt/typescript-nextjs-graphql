import { ScalarsMap, ConvertOptions } from './types';
import { DeclarationBlockConfig } from './utils';
import { GraphQLSchema, FragmentDefinitionNode, OperationDefinitionNode, ASTNode } from 'graphql';
import { SelectionSetToObject } from './selection-set-to-object';
import { OperationVariablesToObject } from './variables-to-object';
import { RawConfig, ParsedConfig, BaseVisitor, BaseVisitorConvertOptions } from './base-visitor';
export interface ParsedDocumentsConfig extends ParsedConfig {
    addTypename: boolean;
}
export interface RawDocumentsConfig extends RawConfig {
    /**
     * @name skipTypename
     * @type boolean
     * @default false
     * @description Automatically adds `__typename` field to the generated types, even when they are not specified
     * in the selection set.
     *
     * @example
     * ```yml
     * config:
     *   skipTypename: true
     * ```
     */
    skipTypename?: boolean;
}
export declare class BaseDocumentsVisitor<TRawConfig extends RawDocumentsConfig = RawDocumentsConfig, TPluginConfig extends ParsedDocumentsConfig = ParsedDocumentsConfig> extends BaseVisitor<TRawConfig, TPluginConfig> {
    protected _schema: GraphQLSchema;
    protected _unnamedCounter: number;
    protected _variablesTransfomer: OperationVariablesToObject;
    protected _selectionSetToObject: SelectionSetToObject;
    constructor(rawConfig: TRawConfig, additionalConfig: TPluginConfig, _schema: GraphQLSchema, scalars?: ScalarsMap);
    setSelectionSetHandler(handler: SelectionSetToObject): void;
    setDeclarationBlockConfig(config: DeclarationBlockConfig): void;
    setVariablesTransformer(variablesTransfomer: OperationVariablesToObject): void;
    convertName(node: ASTNode | string, options?: ConvertOptions & BaseVisitorConvertOptions): string;
    readonly schema: GraphQLSchema;
    readonly addTypename: boolean;
    private handleAnonymouseOperation;
    FragmentDefinition(node: FragmentDefinitionNode): string;
    OperationDefinition(node: OperationDefinitionNode): string;
}
