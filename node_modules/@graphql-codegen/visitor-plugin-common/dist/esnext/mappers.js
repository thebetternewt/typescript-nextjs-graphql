export function parseMapper(mapper) {
    if (isExternalMapper(mapper)) {
        const [source, type] = mapper.split('#');
        return {
            isExternal: true,
            source,
            type,
        };
    }
    return {
        isExternal: false,
        type: mapper,
    };
}
export function isExternalMapper(value) {
    return value.includes('#');
}
export function transformMappers(rawMappers) {
    const result = {};
    Object.keys(rawMappers).forEach(gqlTypeName => {
        const mapperDef = rawMappers[gqlTypeName];
        const parsedMapper = parseMapper(mapperDef);
        result[gqlTypeName] = parsedMapper;
    });
    return result;
}
//# sourceMappingURL=mappers.js.map