import { GraphQLSchema, DocumentNode } from 'graphql';
import { IntrospectionFromUrlLoader } from './introspection-from-url';
import { IntrospectionFromFileLoader } from './introspection-from-file';
import { SchemaFromString } from './schema-from-string';
import { SchemaFromTypedefs } from './schema-from-typedefs';
import { SchemaFromExport } from './schema-from-export';
export { IntrospectionFromUrlLoader } from './introspection-from-url';
export { IntrospectionFromFileLoader } from './introspection-from-file';
export { SchemaFromString } from './schema-from-string';
export { SchemaFromTypedefs } from './schema-from-typedefs';
export { SchemaFromExport } from './schema-from-export';
export declare const loadSchema: <T = any>(pointToSchema: string, options?: T, schemaHandlers?: (IntrospectionFromUrlLoader | IntrospectionFromFileLoader | SchemaFromString | SchemaFromTypedefs | SchemaFromExport)[]) => Promise<DocumentNode | GraphQLSchema>;
